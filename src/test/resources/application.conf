# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = debug
  log-dead-letters = on
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serialize-messages = off // when on, the akka framework will determine whether or not messages can be serialized, else the plugin
    warn-about-java-serializer-usage = off

    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }

    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
      kryo = "com.twitter.chill.akka.AkkaSerializer"
      json = "com.github.dnvriend.serializer.json.JsonSerializer"
      csv = "com.github.dnvriend.serializer.csv.CsvSerializer"
    }

    serialization-bindings {
      "com.google.protobuf.Message" = proto
      "com.github.dnvriend.domain.PetDomain$Pet" = kryo
      "com.github.dnvriend.domain.OrderDomain$Order" = json
      "com.github.dnvriend.domain.CsvText" = csv
    }

    serialization-identifiers {
      "com.github.dnvriend.serializer.csv.CsvSerializer" = 100
    }
  }

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

inmemory-journal {
  event-adapters {
    person-write-adapter = "com.github.dnvriend.persistence.PersonWriteEventAdapter"
    protobuf-read-adapter = "com.github.dnvriend.persistence.ProtobufReadEventAdapter"
  }
  event-adapter-bindings {
    "com.github.dnvriend.domain.Person$PersonEvent" = person-write-adapter
    "com.google.protobuf.Message" = protobuf-read-adapter
  }
}
